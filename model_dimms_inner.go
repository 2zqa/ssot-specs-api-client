/*
SSOT API

This page describes the api endpoints for single source of truth infra project

API version: 0.1.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
)

// checks if the DIMMsInner type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &DIMMsInner{}

// DIMMsInner struct for DIMMsInner
type DIMMsInner struct {
	// Size of the DIMM in gigabytes
	SizeGigabytes *int64 `json:"size_gigabytes,omitempty"`
	// Speed of the DIMM in megatransfers per second
	SpeedMtS *int64 `json:"speed_mt_s,omitempty"`
	// Manufacturer of the DIMM
	Manufacturer *string `json:"manufacturer,omitempty"`
	// Serial number of the DIMM
	SerialNumber *string `json:"serial_number,omitempty"`
	// Type of the DIMM
	Type *string `json:"type,omitempty"`
	// Part number of the DIMM
	PartNumber *string `json:"part_number,omitempty"`
	// Form factor of the DIMM
	FormFactor *string `json:"form_factor,omitempty"`
	// Locator of the DIMM
	Locator *string `json:"locator,omitempty"`
	// Bank locator of the DIMM
	BankLocator *string `json:"bank_locator,omitempty"`
}

// NewDIMMsInner instantiates a new DIMMsInner object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewDIMMsInner() *DIMMsInner {
	this := DIMMsInner{}
	return &this
}

// NewDIMMsInnerWithDefaults instantiates a new DIMMsInner object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewDIMMsInnerWithDefaults() *DIMMsInner {
	this := DIMMsInner{}
	return &this
}

// GetSizeGigabytes returns the SizeGigabytes field value if set, zero value otherwise.
func (o *DIMMsInner) GetSizeGigabytes() int64 {
	if o == nil || IsNil(o.SizeGigabytes) {
		var ret int64
		return ret
	}
	return *o.SizeGigabytes
}

// GetSizeGigabytesOk returns a tuple with the SizeGigabytes field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *DIMMsInner) GetSizeGigabytesOk() (*int64, bool) {
	if o == nil || IsNil(o.SizeGigabytes) {
		return nil, false
	}
	return o.SizeGigabytes, true
}

// HasSizeGigabytes returns a boolean if a field has been set.
func (o *DIMMsInner) HasSizeGigabytes() bool {
	if o != nil && !IsNil(o.SizeGigabytes) {
		return true
	}

	return false
}

// SetSizeGigabytes gets a reference to the given int64 and assigns it to the SizeGigabytes field.
func (o *DIMMsInner) SetSizeGigabytes(v int64) {
	o.SizeGigabytes = &v
}

// GetSpeedMtS returns the SpeedMtS field value if set, zero value otherwise.
func (o *DIMMsInner) GetSpeedMtS() int64 {
	if o == nil || IsNil(o.SpeedMtS) {
		var ret int64
		return ret
	}
	return *o.SpeedMtS
}

// GetSpeedMtSOk returns a tuple with the SpeedMtS field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *DIMMsInner) GetSpeedMtSOk() (*int64, bool) {
	if o == nil || IsNil(o.SpeedMtS) {
		return nil, false
	}
	return o.SpeedMtS, true
}

// HasSpeedMtS returns a boolean if a field has been set.
func (o *DIMMsInner) HasSpeedMtS() bool {
	if o != nil && !IsNil(o.SpeedMtS) {
		return true
	}

	return false
}

// SetSpeedMtS gets a reference to the given int64 and assigns it to the SpeedMtS field.
func (o *DIMMsInner) SetSpeedMtS(v int64) {
	o.SpeedMtS = &v
}

// GetManufacturer returns the Manufacturer field value if set, zero value otherwise.
func (o *DIMMsInner) GetManufacturer() string {
	if o == nil || IsNil(o.Manufacturer) {
		var ret string
		return ret
	}
	return *o.Manufacturer
}

// GetManufacturerOk returns a tuple with the Manufacturer field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *DIMMsInner) GetManufacturerOk() (*string, bool) {
	if o == nil || IsNil(o.Manufacturer) {
		return nil, false
	}
	return o.Manufacturer, true
}

// HasManufacturer returns a boolean if a field has been set.
func (o *DIMMsInner) HasManufacturer() bool {
	if o != nil && !IsNil(o.Manufacturer) {
		return true
	}

	return false
}

// SetManufacturer gets a reference to the given string and assigns it to the Manufacturer field.
func (o *DIMMsInner) SetManufacturer(v string) {
	o.Manufacturer = &v
}

// GetSerialNumber returns the SerialNumber field value if set, zero value otherwise.
func (o *DIMMsInner) GetSerialNumber() string {
	if o == nil || IsNil(o.SerialNumber) {
		var ret string
		return ret
	}
	return *o.SerialNumber
}

// GetSerialNumberOk returns a tuple with the SerialNumber field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *DIMMsInner) GetSerialNumberOk() (*string, bool) {
	if o == nil || IsNil(o.SerialNumber) {
		return nil, false
	}
	return o.SerialNumber, true
}

// HasSerialNumber returns a boolean if a field has been set.
func (o *DIMMsInner) HasSerialNumber() bool {
	if o != nil && !IsNil(o.SerialNumber) {
		return true
	}

	return false
}

// SetSerialNumber gets a reference to the given string and assigns it to the SerialNumber field.
func (o *DIMMsInner) SetSerialNumber(v string) {
	o.SerialNumber = &v
}

// GetType returns the Type field value if set, zero value otherwise.
func (o *DIMMsInner) GetType() string {
	if o == nil || IsNil(o.Type) {
		var ret string
		return ret
	}
	return *o.Type
}

// GetTypeOk returns a tuple with the Type field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *DIMMsInner) GetTypeOk() (*string, bool) {
	if o == nil || IsNil(o.Type) {
		return nil, false
	}
	return o.Type, true
}

// HasType returns a boolean if a field has been set.
func (o *DIMMsInner) HasType() bool {
	if o != nil && !IsNil(o.Type) {
		return true
	}

	return false
}

// SetType gets a reference to the given string and assigns it to the Type field.
func (o *DIMMsInner) SetType(v string) {
	o.Type = &v
}

// GetPartNumber returns the PartNumber field value if set, zero value otherwise.
func (o *DIMMsInner) GetPartNumber() string {
	if o == nil || IsNil(o.PartNumber) {
		var ret string
		return ret
	}
	return *o.PartNumber
}

// GetPartNumberOk returns a tuple with the PartNumber field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *DIMMsInner) GetPartNumberOk() (*string, bool) {
	if o == nil || IsNil(o.PartNumber) {
		return nil, false
	}
	return o.PartNumber, true
}

// HasPartNumber returns a boolean if a field has been set.
func (o *DIMMsInner) HasPartNumber() bool {
	if o != nil && !IsNil(o.PartNumber) {
		return true
	}

	return false
}

// SetPartNumber gets a reference to the given string and assigns it to the PartNumber field.
func (o *DIMMsInner) SetPartNumber(v string) {
	o.PartNumber = &v
}

// GetFormFactor returns the FormFactor field value if set, zero value otherwise.
func (o *DIMMsInner) GetFormFactor() string {
	if o == nil || IsNil(o.FormFactor) {
		var ret string
		return ret
	}
	return *o.FormFactor
}

// GetFormFactorOk returns a tuple with the FormFactor field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *DIMMsInner) GetFormFactorOk() (*string, bool) {
	if o == nil || IsNil(o.FormFactor) {
		return nil, false
	}
	return o.FormFactor, true
}

// HasFormFactor returns a boolean if a field has been set.
func (o *DIMMsInner) HasFormFactor() bool {
	if o != nil && !IsNil(o.FormFactor) {
		return true
	}

	return false
}

// SetFormFactor gets a reference to the given string and assigns it to the FormFactor field.
func (o *DIMMsInner) SetFormFactor(v string) {
	o.FormFactor = &v
}

// GetLocator returns the Locator field value if set, zero value otherwise.
func (o *DIMMsInner) GetLocator() string {
	if o == nil || IsNil(o.Locator) {
		var ret string
		return ret
	}
	return *o.Locator
}

// GetLocatorOk returns a tuple with the Locator field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *DIMMsInner) GetLocatorOk() (*string, bool) {
	if o == nil || IsNil(o.Locator) {
		return nil, false
	}
	return o.Locator, true
}

// HasLocator returns a boolean if a field has been set.
func (o *DIMMsInner) HasLocator() bool {
	if o != nil && !IsNil(o.Locator) {
		return true
	}

	return false
}

// SetLocator gets a reference to the given string and assigns it to the Locator field.
func (o *DIMMsInner) SetLocator(v string) {
	o.Locator = &v
}

// GetBankLocator returns the BankLocator field value if set, zero value otherwise.
func (o *DIMMsInner) GetBankLocator() string {
	if o == nil || IsNil(o.BankLocator) {
		var ret string
		return ret
	}
	return *o.BankLocator
}

// GetBankLocatorOk returns a tuple with the BankLocator field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *DIMMsInner) GetBankLocatorOk() (*string, bool) {
	if o == nil || IsNil(o.BankLocator) {
		return nil, false
	}
	return o.BankLocator, true
}

// HasBankLocator returns a boolean if a field has been set.
func (o *DIMMsInner) HasBankLocator() bool {
	if o != nil && !IsNil(o.BankLocator) {
		return true
	}

	return false
}

// SetBankLocator gets a reference to the given string and assigns it to the BankLocator field.
func (o *DIMMsInner) SetBankLocator(v string) {
	o.BankLocator = &v
}

func (o DIMMsInner) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o DIMMsInner) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.SizeGigabytes) {
		toSerialize["size_gigabytes"] = o.SizeGigabytes
	}
	if !IsNil(o.SpeedMtS) {
		toSerialize["speed_mt_s"] = o.SpeedMtS
	}
	if !IsNil(o.Manufacturer) {
		toSerialize["manufacturer"] = o.Manufacturer
	}
	if !IsNil(o.SerialNumber) {
		toSerialize["serial_number"] = o.SerialNumber
	}
	if !IsNil(o.Type) {
		toSerialize["type"] = o.Type
	}
	if !IsNil(o.PartNumber) {
		toSerialize["part_number"] = o.PartNumber
	}
	if !IsNil(o.FormFactor) {
		toSerialize["form_factor"] = o.FormFactor
	}
	if !IsNil(o.Locator) {
		toSerialize["locator"] = o.Locator
	}
	if !IsNil(o.BankLocator) {
		toSerialize["bank_locator"] = o.BankLocator
	}
	return toSerialize, nil
}

type NullableDIMMsInner struct {
	value *DIMMsInner
	isSet bool
}

func (v NullableDIMMsInner) Get() *DIMMsInner {
	return v.value
}

func (v *NullableDIMMsInner) Set(val *DIMMsInner) {
	v.value = val
	v.isSet = true
}

func (v NullableDIMMsInner) IsSet() bool {
	return v.isSet
}

func (v *NullableDIMMsInner) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableDIMMsInner(val *DIMMsInner) *NullableDIMMsInner {
	return &NullableDIMMsInner{value: val, isSet: true}
}

func (v NullableDIMMsInner) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableDIMMsInner) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


