/*
SSOT API

This page describes the api endpoints for single source of truth infra project

API version: 0.1.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
)

// checks if the CPU type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &CPU{}

// CPU struct for CPU
type CPU struct {
	// Model name
	Name *string `json:"name,omitempty"`
	Architecture *string `json:"architecture,omitempty"`
	CoreCount *int64 `json:"core_count,omitempty"`
	CpuCount *int64 `json:"cpu_count,omitempty"`
	// Max clock frequency in MHz
	MaxFrequencyMegahertz *int64 `json:"max_frequency_megahertz,omitempty"`
	Mitigations []string `json:"mitigations,omitempty"`
}

// NewCPU instantiates a new CPU object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewCPU() *CPU {
	this := CPU{}
	return &this
}

// NewCPUWithDefaults instantiates a new CPU object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewCPUWithDefaults() *CPU {
	this := CPU{}
	return &this
}

// GetName returns the Name field value if set, zero value otherwise.
func (o *CPU) GetName() string {
	if o == nil || IsNil(o.Name) {
		var ret string
		return ret
	}
	return *o.Name
}

// GetNameOk returns a tuple with the Name field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CPU) GetNameOk() (*string, bool) {
	if o == nil || IsNil(o.Name) {
		return nil, false
	}
	return o.Name, true
}

// HasName returns a boolean if a field has been set.
func (o *CPU) HasName() bool {
	if o != nil && !IsNil(o.Name) {
		return true
	}

	return false
}

// SetName gets a reference to the given string and assigns it to the Name field.
func (o *CPU) SetName(v string) {
	o.Name = &v
}

// GetArchitecture returns the Architecture field value if set, zero value otherwise.
func (o *CPU) GetArchitecture() string {
	if o == nil || IsNil(o.Architecture) {
		var ret string
		return ret
	}
	return *o.Architecture
}

// GetArchitectureOk returns a tuple with the Architecture field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CPU) GetArchitectureOk() (*string, bool) {
	if o == nil || IsNil(o.Architecture) {
		return nil, false
	}
	return o.Architecture, true
}

// HasArchitecture returns a boolean if a field has been set.
func (o *CPU) HasArchitecture() bool {
	if o != nil && !IsNil(o.Architecture) {
		return true
	}

	return false
}

// SetArchitecture gets a reference to the given string and assigns it to the Architecture field.
func (o *CPU) SetArchitecture(v string) {
	o.Architecture = &v
}

// GetCoreCount returns the CoreCount field value if set, zero value otherwise.
func (o *CPU) GetCoreCount() int64 {
	if o == nil || IsNil(o.CoreCount) {
		var ret int64
		return ret
	}
	return *o.CoreCount
}

// GetCoreCountOk returns a tuple with the CoreCount field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CPU) GetCoreCountOk() (*int64, bool) {
	if o == nil || IsNil(o.CoreCount) {
		return nil, false
	}
	return o.CoreCount, true
}

// HasCoreCount returns a boolean if a field has been set.
func (o *CPU) HasCoreCount() bool {
	if o != nil && !IsNil(o.CoreCount) {
		return true
	}

	return false
}

// SetCoreCount gets a reference to the given int64 and assigns it to the CoreCount field.
func (o *CPU) SetCoreCount(v int64) {
	o.CoreCount = &v
}

// GetCpuCount returns the CpuCount field value if set, zero value otherwise.
func (o *CPU) GetCpuCount() int64 {
	if o == nil || IsNil(o.CpuCount) {
		var ret int64
		return ret
	}
	return *o.CpuCount
}

// GetCpuCountOk returns a tuple with the CpuCount field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CPU) GetCpuCountOk() (*int64, bool) {
	if o == nil || IsNil(o.CpuCount) {
		return nil, false
	}
	return o.CpuCount, true
}

// HasCpuCount returns a boolean if a field has been set.
func (o *CPU) HasCpuCount() bool {
	if o != nil && !IsNil(o.CpuCount) {
		return true
	}

	return false
}

// SetCpuCount gets a reference to the given int64 and assigns it to the CpuCount field.
func (o *CPU) SetCpuCount(v int64) {
	o.CpuCount = &v
}

// GetMaxFrequencyMegahertz returns the MaxFrequencyMegahertz field value if set, zero value otherwise.
func (o *CPU) GetMaxFrequencyMegahertz() int64 {
	if o == nil || IsNil(o.MaxFrequencyMegahertz) {
		var ret int64
		return ret
	}
	return *o.MaxFrequencyMegahertz
}

// GetMaxFrequencyMegahertzOk returns a tuple with the MaxFrequencyMegahertz field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CPU) GetMaxFrequencyMegahertzOk() (*int64, bool) {
	if o == nil || IsNil(o.MaxFrequencyMegahertz) {
		return nil, false
	}
	return o.MaxFrequencyMegahertz, true
}

// HasMaxFrequencyMegahertz returns a boolean if a field has been set.
func (o *CPU) HasMaxFrequencyMegahertz() bool {
	if o != nil && !IsNil(o.MaxFrequencyMegahertz) {
		return true
	}

	return false
}

// SetMaxFrequencyMegahertz gets a reference to the given int64 and assigns it to the MaxFrequencyMegahertz field.
func (o *CPU) SetMaxFrequencyMegahertz(v int64) {
	o.MaxFrequencyMegahertz = &v
}

// GetMitigations returns the Mitigations field value if set, zero value otherwise.
func (o *CPU) GetMitigations() []string {
	if o == nil || IsNil(o.Mitigations) {
		var ret []string
		return ret
	}
	return o.Mitigations
}

// GetMitigationsOk returns a tuple with the Mitigations field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CPU) GetMitigationsOk() ([]string, bool) {
	if o == nil || IsNil(o.Mitigations) {
		return nil, false
	}
	return o.Mitigations, true
}

// HasMitigations returns a boolean if a field has been set.
func (o *CPU) HasMitigations() bool {
	if o != nil && !IsNil(o.Mitigations) {
		return true
	}

	return false
}

// SetMitigations gets a reference to the given []string and assigns it to the Mitigations field.
func (o *CPU) SetMitigations(v []string) {
	o.Mitigations = v
}

func (o CPU) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o CPU) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Name) {
		toSerialize["name"] = o.Name
	}
	if !IsNil(o.Architecture) {
		toSerialize["architecture"] = o.Architecture
	}
	if !IsNil(o.CoreCount) {
		toSerialize["core_count"] = o.CoreCount
	}
	if !IsNil(o.CpuCount) {
		toSerialize["cpu_count"] = o.CpuCount
	}
	if !IsNil(o.MaxFrequencyMegahertz) {
		toSerialize["max_frequency_megahertz"] = o.MaxFrequencyMegahertz
	}
	if !IsNil(o.Mitigations) {
		toSerialize["mitigations"] = o.Mitigations
	}
	return toSerialize, nil
}

type NullableCPU struct {
	value *CPU
	isSet bool
}

func (v NullableCPU) Get() *CPU {
	return v.value
}

func (v *NullableCPU) Set(val *CPU) {
	v.value = val
	v.isSet = true
}

func (v NullableCPU) IsSet() bool {
	return v.isSet
}

func (v *NullableCPU) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableCPU(val *CPU) *NullableCPU {
	return &NullableCPU{value: val, isSet: true}
}

func (v NullableCPU) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableCPU) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


